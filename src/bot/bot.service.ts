import { Injectable } from '@nestjs/common';
import { InjectRepository } from '@nestjs/typeorm';
import { Repository } from 'typeorm';
import { Report } from 'src/database/entity/report.entity';
import { Context, Markup } from 'telegraf';

@Injectable()
export class BotService {
  constructor(
    @InjectRepository(Report)
    private reportRepo: Repository<Report>,
  ) {}


  onStart(ctx: Context) {
    ctx.reply(
      'üìä –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ—Ç—á–µ—Ç–æ–≤ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É',
      Markup.inlineKeyboard([
        [Markup.button.callback('–ü–æ–∫–∞–∑–∞—Ç—å –æ—Ç—á–µ—Ç—ã', 'get_reports')]
      ])
    );
  }

  async OnGetReports(ctx: Context) {
    const reports = await this.reportRepo.find();
    
    if (reports.length === 0) {
      await ctx.reply('–û—Ç—á–µ—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
      return;
    }

    for (const report of reports) {
      await ctx.replyWithMarkdown(
        `*–û—Ç—á–µ—Ç #${report.id}*\n` +
        `üìù–æ–ø–∏—Å–∞–Ω–∏–µ: ${report.description}\n` +
        `üïí—Å–æ–∑–¥–∞–Ω–æ: ${report.created_at.toLocaleDateString()}\n` +
        `üïí–∏–∑–º–µ–Ω–µ–Ω–æ: ${report.status_updated_at.toLocaleDateString()}\n` +
        `üïí–≤—ã–ø–æ–ª–Ω–µ–Ω–æ: ${report.complited_at.toLocaleDateString()}\n` +
        `üîÑ—Å—Ç–∞—Ç—É—Å: ${report.status.status}`
      );
    }
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–∑–∞–≥–ª—É—à–∫–∞)
  onMessage(ctx: Context) {
    ctx.reply('–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏');
  }
}